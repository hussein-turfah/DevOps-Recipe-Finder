name: Deploy Streamlit App
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Analyze:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: '3.11'

      - name: Install Packages
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Analyze Code using pylint
        run: |
          pylint app.py || exit 1

  Check-Commit-Message:
    runs-on: ubuntu-latest
    needs: [Analyze]

    outputs:
      should_deploy: ${{ steps.check.outputs.should_deploy }}
    steps:
      - uses: actions/checkout@v4

      - name: Check if commit message includes "No Deploy"
        id: check
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          if [[ $COMMIT_MESSAGE == *"No Deploy"* ]]; then
            echo "No Deploy keyword found in commit message. Skipping deployment..."
            echo "should_deploy=false" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "should_deploy=true" >> $GITHUB_OUTPUT
          fi

  Setting-Up:
    runs-on: ubuntu-latest
    needs: [Analyze, Check-Commit-Message]
    
    if: needs.Check-Commit-Message.outputs.should_deploy == true
    steps:
      - name: Debugging
        run: echo "${{ needs.Check-Commit-Message.outputs.should_deploy }}"

      - uses: actions/checkout@v4
      - name: Create PEM file
        run: |
          echo "${{ secrets.SERVER_PEM }}" > server-key.pem
          chmod 400 server-key.pem

      - name: Connect to EC2 and execute setup commands
        run: |
          ssh -o StrictHostKeyChecking=no -i server-key.pem ubuntu@${{ secrets.SERVER_IP }} << 'EOF'
            git clone https://github.com/hussein-turfah/DevOps-Recipe-Finder.git || true
            cd /home/ubuntu/DevOps-Recipe-Finder
            git pull origin main

            sudo apt-get update && sudo apt-get install python3.12-venv -y
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
          EOF
      
      - name: Start Streamlit App
        run: |
          ssh -o StrictHostKeyChecking=no -i server-key.pem ubuntu@${{ secrets.SERVER_IP }} << 'EOF'
            cd /home/ubuntu/DevOps-Recipe-Finder
            nohup venv/bin/streamlit run app.py --server.port 80 > streamlit.log 2>&1 &
          EOF
          